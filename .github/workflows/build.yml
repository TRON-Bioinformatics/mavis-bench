# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    name: python-${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install -e .[test]  # need editable to make sure the coverage reports correctly
    - name: install bwa
      run: |
        git clone https://github.com/lh3/bwa.git
        cd bwa
        git checkout v0.7.17
        make
        cd ..
    - name: install blat
      run: |
        wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/blat/blat
        chmod a+x blat
    - name: set up .pth file
      run: |
        python tests/setup_subprocess_cov.py
    - name: run full tests with pytest
      run: |
        export PATH=$PATH:$(pwd):$(pwd)/bwa
        export COVERAGE_PROCESS_START=$(pwd)/.coveragerc

        pytest tests -v \
          --junitxml=junit/test-results-${{ matrix.python-version }}.xml \
          --cov mavis \
          --cov-report term-missing \
          --cov-report xml \
          --durations=10 \
          --cov-branch
      env:
        RUN_FULL: 1
    - name: Upload pytest test results
      uses: actions/upload-artifact@master
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
      if: always()
    - name: Update code coverage report to CodeCov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
      if: matrix.python-version == 3.8
